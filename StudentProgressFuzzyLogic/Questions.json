[{"Title":"When would you use asynchronous actions?","Answers":[{"IsCorrect":false,"Description":"to release the quest thread of a I/O operation"},{"IsCorrect":false,"Description":"to capture the request thread of a I/O operation"},{"IsCorrect":true,"Description":"to avoid blocking the request thread while waits for an I/ O operation"},{"IsCorrect":false,"Description":"to block the request thread if it waits for an I/ O operation"}]},{"Title":"What happens when you concatenate two strings?","Answers":[{"IsCorrect":false,"Description":"You cannot concatenate strings in .NET."},{"IsCorrect":false,"Description":"The second string object is modified so it contains the concatenated strings."},{"IsCorrect":true,"Description":"A third string object is created containing the concatenated strings."},{"IsCorrect":false,"Description":"The first string object is modified so it contains the concatenated strings."}]},{"Title":"Which is a set of features that extends the query capabilities of the .NET language syntax by adding sets of new standard query operators that allow data manipulation, regardless of the data source?","Answers":[{"IsCorrect":false,"Description":"XML"},{"IsCorrect":false,"Description":"C#"},{"IsCorrect":true,"Description":"LINQ"},{"IsCorrect":false,"Description":"XAML"}]},{"Title":"Assuming y is a value type, which is an example of boxing?","Answers":[{"IsCorrect":false,"Description":"y = (int)thisObject;"},{"IsCorrect":false,"Description":"int y = 3;"},{"IsCorrect":false,"Description":"y = (int)thisObject=;3;"},{"IsCorrect":true,"Description":"object thisObject = y;"}]},{"Title":"What is the difference between System.String and string?","Answers":[{"IsCorrect":false,"Description":"string is used for fied-size strings in C#, while System.String is used for all the strings."},{"IsCorrect":false,"Description":"There is no such class as System.String."},{"IsCorrect":true,"Description":"There is none\u2014string is an alias for System. String."},{"IsCorrect":false,"Description":"System.String is a VB.NET data type, while string is a C# type."}]},{"Title":"When break is used inside two nested for loops, does control come out of the inner for loop or the outer for loop?","Answers":[{"IsCorrect":false,"Description":"It breaks from only the outer loop."},{"IsCorrect":false,"Description":"It breaks from all loops."},{"IsCorrect":true,"Description":"It breaks from only the inner loop."},{"IsCorrect":false,"Description":"It breaks from the outer loop after the second iteration."}]},{"Title":"Which is NOT true about lambda statements?","Answers":[{"IsCorrect":true,"Description":"A statement lambda cannot return a value."},{"IsCorrect":false,"Description":"If a statement lambda has a return value, it has to use a return statement."},{"IsCorrect":false,"Description":"A statement lambda requires using curly braces."},{"IsCorrect":false,"Description":"A statement lambda can have more than one statement."}]},{"Title":"Which is NOT true about a read-only variable?","Answers":[{"IsCorrect":false,"Description":"At runtime, its value is evaluated."},{"IsCorrect":false,"Description":"It can be either static or an instance member."},{"IsCorrect":true,"Description":"It can be initialized at declaration only."},{"IsCorrect":false,"Description":"It can be initialized in either the constructor or the declaration."}]},{"Title":"What is a task?","Answers":[{"IsCorrect":false,"Description":"the basic unit to which an operating system allocates processor time"},{"IsCorrect":false,"Description":"a program that is running on your compiler"},{"IsCorrect":true,"Description":"a single operation that does not return a value and that usually executes asynchronously"},{"IsCorrect":false,"Description":"a series of related methods that together turn inputs into outputs"}]},{"Title":"When you define an abstract method, how do you use it in a derived class?","Answers":[{"IsCorrect":false,"Description":"Abstract methods cannot be used in derived classes."},{"IsCorrect":false,"Description":"In your derived class, overload the method."},{"IsCorrect":true,"Description":"In your derived class, override the method."},{"IsCorrect":false,"Description":"In your derived class, declare the method as virtual."}]}]